prepare remote debugger - minikube

# Prepera node for remote debugger - without creation of podman

# install packages
packages="wget httpd-tools libvirt libvirt-devel  yum-utils git make podman gcc openssl-devel bzip2-devel libffi-devel zlib-devel python3-pip git jq bash-completion xinetd unzip sqlite-devel podman-remote"
for i in $packages ; do yum -y install $i; done
dnf install -y https://rpmfind.net/linux/fedora/linux/releases/37/Everything/x86_64/os/Packages/c/crudini-0.9.3-6.fc36.noarch.rpm

# terrafom install 
curl --retry 5 -Lo packer.zip https://releases.hashicorp.com/packer/1.8.0/packer_1.8.0_linux_386.zip && unzip packer.zip -d /usr/bin/ && mv /usr/bin/packer /usr/bin/packer.io && rm -rf packer.zip
curl --retry 5 -Lo terraform.zip https://releases.hashicorp.com/terraform/1.3.6/terraform_1.3.6_linux_amd64.zip && unzip terraform.zip -d /usr/bin/ && rm -rf terraform.zip


# upgrade to python 3.10
wget https://www.python.org/ftp/python/3.10.8/Python-3.10.8.tgz 
tar xzf Python-3.10.8.tgz 
cd Python-3.10.8 
./configure --with-system-ffi --with-computed-gotos --enable-loadable-sqlite-extensions
make -j ${nproc} 
make altinstall 
cd ..
rm -rf Python-3.10.8
rm -rf Python-3.10.8.tgz

# set python 3.10 as default and pip3
update-alternatives --install /usr/bin/python3 python3 $(which python3.10) 4
update-alternatives --set  python3 $(which python3.10)
python3.10 -m pip install --upgrade pip iniparse

# create ssh keypair
ssh-keygen -t rsa -b 1024 -f /root/.ssh/id_rsa -q -P ""
ssh-keygen -t ecdsa -b 1024 -f /root/.ssh/id_ecdsa -q -P ""
ssh-keygen -A


# fix suduers file before running sudo
chmod 700 /etc/sudoers
crudini --set /etc/sudoers '' 'Defaults    secure_path' '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/root/bin'
chmod 440 /etc/sudoers

`
# clone repos
git config --global http.sslVerify false
git clone https://github.com/openshift/assisted-test-infra
git clone https://gitlab.cee.redhat.com/ocp-edge-qe/kni-assisted-installer-auto.git
cd assisted-test-infra

# update file path, allowing to run tests outside of repo.
crudini --set --existing /root/assisted-test-infra/src/consts/consts.py '' TF_TEMPLATES_ROOT '"/root/assisted-test-infra/terraform_files"'

crudini --set --existing /root/assisted-test-infra/src/consts/consts.py '' RELEASE_IMAGES_PATH '"/root/assisted-test-infra/assisted-service/data/default_release_images.json"'

# Remove from assisted-test-infra all JunitTestCase() decorator - Noise
find  /root/assisted-test-infra/ -type f -name "*.py" -exec sed -i 's/@JunitTestCase()$/#@JunitTestCase()/g' {} +
find  /root/assisted-test-infra/ -type f -name "*.py" -exec sed -i 's/@JunitTestSuite()()$/#@JunitTestSuite()/g' {} +


# installing repos requirements (we dont support pip install as package to repo)
python3.10 -m pip install pip --upgrade 
python3.10 -m pip install assisted_service_client iniparse --upgrade
python3.10 -m pip install pytest htpasswd pdbpp 

pip install -r /root/assisted-test-infra/requirements.txt

# run script to prepeare envirement
scripts/install_environment.sh


# copy params for tests - pull_secret and test params... need to copy from web.... - TBD 
# note that minikube REMOTE_SERVICE_URL on port 6500
#source /etc/profile.d/params.sh for all terminals in profile.d
------------------------------------------------------------------

#Try to run pytest directly from hypervisor

# run testcase:  (--trace for pdb)
pytest /root/kni-assisted-installer-auto/api_tests/test_cluster_tags.py::TestClusterTags::test_clear_cluster_tags -s




   


